Problema a ser implementado

Serão disponibilizados 15 arquivos do tipo texto, contendo 500, 1.000, 5.000, 10.000 e 50.000 registros, dispostos de forma aleatória, ordenada e invertida.
Os registros representarão dados de promissórias e serão compostos dos campos nome, CPF, data de vencimento, valor, se foi paga ou não.

O trabalho consiste em:
1) Comece a contar o tempo.
2) Carregue o vetor com o arquivo de 500 elementos aleatórios.
3) Use o método HeapSort para ordenar os registros pela data de vencimento. Grave o resultado da ordenação em um arquivo.
4) Use Pesquisa Binária para pesquisar 400 datas. Estas datas estarão em um arquivo que será fornecido. Ao final, deve gerar um arquivo onde, para cada data encontrada, são gravadas a data, o valor e o nome do cliente das promissórias pagas, separadas das não pagas, uma por linha, e a quantidade total de promissórias não pagas. Se a data não for encontrada, deve-se gravar uma mensagem de NÃO HÁ PROMISSÓRIA NA DATA MENCIONADA. Veja o exemplo abaixo:
+=====================================+
| Paga                                |
+ 12/12/2012; 350,00; pedro Caliari   +
| Não paga                            |
+ 12/12/2012; 1200,00; João da Silva  +
| 12/12/2012; 800,00; Ana Rezende     |
+ Total não paga: 2000,00             +
+=====================================+

5) Repita 4 vezes o processo de 2 a 4. Você deve rodar o processo 5 vezes no total.
6) Termine de contar o tempo, faça uma média e armazene este resultado.
7) Faça os itens de 2 a 6 para cada um dos tamanhos (500, 1000, 5000, 10000 e 50000), para cada tipo de arquivo (aleatório, ordenado e invertido) e para cada
método (HeapSort + Pesquisa Binária e QuickSort + Pesquisa Binária). Ao todo, o programa rodará 30 vezes.

Após esse processo, rodaremos as árvores:
Para cada um dos tamanhos e tipos de arquivo (aleatório, ordenado e invertido):
8) Comece a contar o tempo.
9) Carregue o arquivo de promissórias, tendo como chave a data de vencimento, em uma ABB não balanceada. Balanceie a árvore. Cuidado com as datas iguais.
10) Faça a pesquisa ABB, usando as 400 datas fornecidas pela professora, nos mesmos moldes do item (4).
11) Repita 4 vezes os processos 9 e 10
12) Termine de contar o tempo, faça uma média e armazene este resultado.
13) Faça os itens de 8 a 12 para cada um dos tamanhos (500, 1000, 5000, 10000 e 50000), para cada tipo de arquivo (aleatório, ordenado e invertido) para a AVL.

Em seguido, rodaremos o Hashing:
Para cada um dos tamanhos e tipos de arquivo (aleatório, ordenado e invertido):
14) Comece a contar o tempo.
15) Carregue o arquivo de promissórias, tendo como chave a data de vencimento, em um Hashing Encadeado.
16) Faça a pesquisa, usando as 400 datas fornecidas pela professora, nos mesmos moldes do item (4).
17) Repita 4 vezes os processos 15 e 16
19) Termine de contar o tempo, faça uma média e armazene este resultado.
20) Compare os tempos de todos os algoritmos em cada tamanho e tipo de arquivo e gere conclusões.
